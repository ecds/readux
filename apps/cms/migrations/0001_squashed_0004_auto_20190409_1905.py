# Generated by Django 2.1.2 on 2019-04-09 20:11

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.embeds.blocks
import wagtail.images.blocks


class Migration(migrations.Migration):

    replaces = [('cms', '0001_initial'), ('cms', '0002_contentpage_custom_slug'), ('cms', '0003_remove_contentpage_custom_slug'), ('cms', '0004_auto_20190409_1905')]

    initial = True

    dependencies = [
        ('manifests', '0001_initial'),
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
        ('kollections', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContentPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField([('heading_block', wagtail.core.blocks.StructBlock([('heading_text', wagtail.core.blocks.CharBlock(classname='title', required=True)), ('size', wagtail.core.blocks.ChoiceBlock(blank=True, choices=[('', 'Select a header size'), ('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4')], required=False))])), ('paragraph_block', wagtail.core.blocks.RichTextBlock(icon='fa-paragraph', template='blocks/paragraph_block.html')), ('image_block', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('caption', wagtail.core.blocks.CharBlock(required=False)), ('attribution', wagtail.core.blocks.CharBlock(required=False))])), ('block_quote', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.TextBlock()), ('attribute_name', wagtail.core.blocks.CharBlock(blank=True, label='e.g. Mary Berry', required=False))])), ('embed_block', wagtail.embeds.blocks.EmbedBlock(help_text='Insert an embed URL e.g https://www.youtube.com/embed/SGJFWirQ3ks', icon='fa-s15', template='blocks/embed_block.html'))], blank=True, verbose_name='Page body')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('tagline', models.TextField(blank=True)),
                ('content_display', models.CharField(choices=[('Collections', 'Collections'), ('Volumes', 'Volumes')], default='Collections', help_text='Select to show all collections or all volumes on the home page', max_length=20)),
                ('featured_collections_sort_order', models.CharField(choices=[('label', 'Title'), ('created_at', 'Input Date')], default='label', help_text='Select order to sort collections on home page', max_length=20)),
                ('featured_volumes_sort_order', models.CharField(choices=[('label', 'Title'), ('created_at', 'Input Date'), ('author', 'Author'), ('published_date', 'Publication Date')], default='label', help_text='Select order to sort volumes on home page', max_length=20)),
                ('featured_collections', modelcluster.fields.ParentalManyToManyField(blank=True, null=True, to='kollections.Collection')),
                ('featured_volumes', modelcluster.fields.ParentalManyToManyField(blank=True, null=True, to='manifests.Manifest')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
