import pytest
from django.test import TestCase
from django.test import RequestFactory
from apps.readux.views import PageDetail
from apps.iiif.manifests.models import Manifest
from apps.iiif.manifests.tests.factories import ManifestFactory
from apps.iiif.kollections.tests.factories import CollectionFactory
from apps.iiif.kollections.models import Collection
from apps.iiif.canvases.models import Canvas
from apps.users.tests.factories import UserFactory
import config.settings.local as settings

pytestmark = pytest.mark.django_db

# FACTORY = RequestFactory()
# VOLUME = ManifestFactory.create()

# TODO: Finish testings search after re-write
class TestReaduxPageDetailSearch(TestCase):
    """
    Test page search.
    """
    def setUp(self):
        self.volume = ManifestFactory.create()
        self.page = self.volume.canvas_set.all().first()
        self.request = RequestFactory.get('/')
        self.request.user = UserFactory.create()

    def test_page_detail_with_query_string(self):
        view = PageDetail(request=self.request)
        data = view.get_context_data(
            volume=self.volume.pid,
            page=self.volume.canvas_set.all().first().pid,
            q='foo'
        )
